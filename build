#!/bin/bash

osname=jasonwnix

die () {
    printf "$1\n" && exit 1
}

isoboot () {
    # Note: The 512 byte bootsector limit doesn't apply to iso
    # Make a bootable iso
    isodir=isodir
    rm -rf "$isodir"
    mkdir -p "$isodir" &&
    cp "$osname.bin" "$isodir" &&
    mkisofs -no-emul-boot -input-charset=utf8 \
            -o "$osname.iso" -b "$osname.bin" "$isodir/"
    rm -rf "$isodir"

    # Boot the iso
    # qemu-system-i386 -boot d -cdrom "$osname.iso"
    qemu-system-i386 -cdrom "$osname.iso"
    rm -f "$osname.iso" "$isodir"
}

flpboot () {
    # dd status=noxfer conv=notrunc if="$osname.bin" of="$osname.flp"
    # dd if="$osname.bin" of="$osname.flp" bs=512
    # qemu-system-i386 -fda "$osname.bin"   # For more contraints ;)
    # Note: The "floppy" is idential to the binary,
    # so we don't need an extra dd step.
    qemu-system-i386 "$osname.bin"  # Original gangsta
}


rm -f *.bin *.flp *.iso
nasm -f bin -o "$osname.bin" "$osname.asm" || die "Assembly fucked up"

# isoboot
flpboot

